# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
    config.vm.guest = :linux
    config.ssh.username = "root"
    config.vm.boot_timeout = 460
    config.ssh.connect_timeout = 360
    config.vm.synced_folder ".", "/vagrant", disabled: true
    config.vm.box_check_update = false
    # prevent tty errors
    config.ssh.shell = "bash -c 'BASH_ENV=/etc/profile exec bash'"
    config.vm.define "os2", primary: true do |os2|
        os2.vm.box = "os2"
        os2.vm.guest = :suse
        os2.vm.provider :virtualbox do |vb|
            vb.check_guest_additions = false
            vb.memory = ENV['VAGRANT_MEMORY'] || "4096"
            vb.cpus = ENV['VAGRANT_CPU'] || "2"
            # This 2 below are so virtualbox uses the host dns resolution
            vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
            vb.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
            # Enable serial output to file
            vb.customize ["modifyvm", :id, "--uart1", "0x3f8", "4"]
            vb.customize ["modifyvm", :id, "--uartmode1", "file", "../serial_port1.log"]
            if ENV['ENABLE_VIDEO_CAPTURE']
                vb.customize ["modifyvm", :id, "--recording", "on", "--recordingscreens", "0","--recordingfile", "../capture.webm"]
            end
        end
    
        os2.vm.provider :libvirt do |libvirt|
            libvirt.qemu_use_session = true
            libvirt.management_network_mac = "52:54:00:00:00:01"
            libvirt.storage :file, :device => :cdrom, :bus => :ide, :type => :raw, :path => ENV['CLOUD_INIT_ISO']
            libvirt.inputs = [] # override the inputs otherwise it tries to insert a ps2 mouse lmao
            libvirt.memory = ENV['VAGRANT_MEMORY'] || "8096"
            libvirt.cpus = ENV['VAGRANT_CPU'] || "4"
            libvirt.graphics_type = "none" # we dont need no stinking graphics
        end
    end
end